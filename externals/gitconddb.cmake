# GitCondDB chain
# - fmt
# - libgit2
#   - libssh2
# - nlohmann/json
include(externals/extcommon.cmake)


ExternalProject_Add(FMT_EP
  GIT_REPOSITORY https://github.com/fmtlib/fmt.git
  GIT_TAG 5.3.0
  GIT_SHALLOW TRUE
  UPDATE_COMMAND ""
  INSTALL_DIR ${EXTERNALS_INSTALL_PREFIX}
  CMAKE_CACHE_ARGS
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_INSTALL_LIBDIR:STRING=lib
    -DCMAKE_CXX_STANDARD:STRING=17
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DCMAKE_CXX_FLAGS_RELEASE:STRING=${CMAKE_CXX_FLAGS_RELEASE}
    -DCMAKE_CXX_FLAGS_DEBUG:STRING=${CMAKE_CXX_FLAGS_DEBUG}
    -DCMAKE_CXX_FLAGS_OPT:STRING=${CMAKE_CXX_FLAGS_OPT}
    -DCMAKE_CXX_FLAGS_PROF:STRING=${CMAKE_CXX_FLAGS_PROF}
    -DBUILD_SHARED_LIBS:BOOL=ON
    -DFMT_DOC:BOOL=OFF
    -DFMT_TEST:BOOL=OFF
  )

ExternalProject_Add(LIBSSH2_EP
  GIT_REPOSITORY https://github.com/libssh2/libssh2.git
  GIT_TAG libssh2-1.8.2
  GIT_SHALLOW TRUE
  UPDATE_COMMAND ""
  INSTALL_DIR ${EXTERNALS_INSTALL_PREFIX}
  CMAKE_CACHE_ARGS
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_INSTALL_LIBDIR:STRING=lib
    -DENABLE_ZLIB_COMPRESSION:BOOL=ON
    -DBUILD_SHARED_LIBS:BOOL=ON
    -DBUILD_TESTING:BOOL=OFF
    -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON
  )

ExternalProject_Add(LIBGIT2_EP
  DEPENDS LIBSSH2_EP
  GIT_REPOSITORY https://github.com/libgit2/libgit2.git
  GIT_TAG v0.28.1
  GIT_SHALLOW TRUE
  UPDATE_COMMAND ""
  INSTALL_DIR ${EXTERNALS_INSTALL_PREFIX}
  CMAKE_CACHE_ARGS
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_PREFIX_PATH:PATH=${EXTERNALS_INSTALL_PREFIX};${CMAKE_PREFIX_PATH}
    -DPKG_CONFIG_USE_CMAKE_PREFIX_PATH:BOOL=ON
    -DBUILD_CLAR:BOOL=OFF
    -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON
  )

ExternalProject_Add(NLOHMANNJSON_EP
  GIT_REPOSITORY https://github.com/nlohmann/json.git
  GIT_TAG v3.6.1
  GIT_SHALLOW TRUE
  UPDATE_COMMAND ""
  INSTALL_DIR ${EXTERNALS_INSTALL_PREFIX}
  CMAKE_CACHE_ARGS
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DBUILD_TESTING:BOOL=OFF
  )

ExternalProject_Add(GITCONDDB_EP
  DEPENDS FMT_EP LIBGIT2_EP NLOHMANNJSON_EP
  GIT_REPOSITORY https://gitlab.cern.ch/lhcb/GitCondDB.git
  GIT_TAG master
  GIT_SHALLOW TRUE
  UPDATE_COMMAND ""
  PATCH_COMMAND patch -p1 < ${CMAKE_CURRENT_LIST_DIR}/gitconddb.patch
  INSTALL_DIR ${EXTERNALS_INSTALL_PREFIX}
  CMAKE_CACHE_ARGS
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_PREFIX_PATH:PATH=${EXTERNALS_INSTALL_PREFIX};${CMAKE_PREFIX_PATH}
    -DPKG_CONFIG_USE_CMAKE_PREFIX_PATH:BOOL=ON
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_INSTALL_LIBDIR:STRING=lib
    -DCMAKE_CXX_STANDARD:STRING=17
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DCMAKE_CXX_FLAGS_RELEASE:STRING=${CMAKE_CXX_FLAGS_RELEASE}
    -DCMAKE_CXX_FLAGS_DEBUG:STRING=${CMAKE_CXX_FLAGS_DEBUG}
    -DCMAKE_CXX_FLAGS_OPT:STRING=${CMAKE_CXX_FLAGS_OPT}
    -DCMAKE_CXX_FLAGS_PROF:STRING=${CMAKE_CXX_FLAGS_PROF}
    -DBUILD_SHARED_LIBS:BOOL=ON
    -DBUILD_TESTING:BOOL=OFF
    -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON
  )

# - Create "imported" target for GitCondDB so we can link to it just as if
#   we'd called find_package(GitCondDB)
set(GitCondDB_INCLUDE_DIR "${EXTERNALS_INSTALL_INCLUDEDIR}")
set(GitCondDB_LIBRARY "${EXTERNALS_INSTALL_LIBDIR}/libGitCondDB${CMAKE_SHARED_LIBRARY_SUFFIX}")

add_library(GitCondDB::GitCondDB UNKNOWN IMPORTED)
set_property(TARGET GitCondDB::GitCondDB PROPERTY IMPORTED_LOCATION "${GitCondDB_LIBRARY}")
set_property(TARGET GitCondDB::GitCondDB PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${GitCondDB_INCLUDE_DIR}")
# May need interface link libs here to libgit2 fmt...
add_dependencies(GitCondDB::GitCondDB GITCONDDB_EP)


# - Create "imported" target for nlohmann_json so we can link to it just as if
#   we'd called find_package(nlohmann_json)
add_library(nlohmann_json::nlohmann_json INTERFACE IMPORTED)
set_property(TARGET nlohmann_json::nlohmann_json PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${EXTERNALS_INSTALL_INCLUDEDIR}")
add_dependencies(nlohmann_json::nlohmann_json NLOHMANNJSON_EP)

